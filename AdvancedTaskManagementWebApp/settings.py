"""
Django settings for AdvancedTaskManagementWebApp project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from imagekitio import ImageKit
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)!+ts2#_8h^zs0rioh*kt%175@qse&&phyyf8uve1r(7kh=ueo'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', '.vercel.app']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.users',
    'apps.workspaces',
    'apps.tasks',
    'apps.notifications',
    'apps.projects',
    'crispy_forms',
    'rest_framework',
    'imagekit',
    'tailwind',
    'theme', 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # Add this line
]

ROOT_URLCONF = 'AdvancedTaskManagementWebApp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates', BASE_DIR / 'components'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
TAILWIND_APP_NAME = 'theme'
WSGI_APPLICATION = 'AdvancedTaskManagementWebApp.wsgi.app'
NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

IMAGEKIT = {
    "private_key": "private_8TXqFPGmz+pRmIHqeltzWDZY4To=",
    "public_key": "public_OUEJZU1GLikbD0mvjd4obyso4ok=",
    "url_endpoint": "https://ik.imagekit.io/tkwyy9ull/"
}

imagekit = ImageKit(
    private_key=IMAGEKIT["private_key"],
    public_key=IMAGEKIT["public_key"],
    url_endpoint=IMAGEKIT["url_endpoint"]
)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'TASK_MANAGEMENT_APP',
        'USER': 'root',
        'PASSWORD': 'Shaan@123',
        'HOST': 'localhost',  # Change if using a remote database
        'PORT': '3306',  # Default MySQL port
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
        }
    }
}
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / "static"]  # For development
STATIC_ROOT = BASE_DIR / "staticfiles"  # Where collectstatic will store files in production

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'},
        'APP': {
            'client_id': '905678148840-uciiu0a2c2uucic4g3mp827etbh45tmv.apps.googleusercontent.com',
            'secret':   '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',
        }
    },
    # 'github': {
    #     'APP': {
    #         'client_id': os.getenv('GITHUB_CLIENT_ID'),
    #         'secret': os.getenv('GITHUB_CLIENT_SECRET'),
    #     }
    # }
}

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SITE_ID = 1

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_LOGIN_METHODS = {'email'}
ACCOUNT_EMAIL_VERIFICATION = "mandatory"  # Users must verify email
ACCOUNT_CONFIRM_EMAIL_ON_GET = True  # Auto-confirm if link is valid
LOGIN_REDIRECT_URL = '/'
ACCOUNT_EMAIL_VERIFICATION_EXPIRE_DAYS = 1  # 24 hours

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'techtitatns@gmail.com'
# EMAIL_HOST_PASSWORD = '123456789@Aa'
EMAIL_HOST_PASSWORD = "jedvgszqepxgbqpb"
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER 

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
LOGIN_REDIRECT_URL = '/'  # Redirect after login
LOGOUT_REDIRECT_URL = '/'  # Redirect after logout

SITE_ID = 1  # Required for allauth
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_USERNAME_REQUIRED = True
SOCIALACCOUNT_QUERY_EMAIL = True
SOCIALACCOUNT_AUTO_SIGNUP = True